# Stage2 DIN v1 (2025-10-01): 精排模型配置，输入来自 prepare_din_data.py。
# 2025-10-04: 校正 label_fields 字段名以对齐最新 DIN 数据。

train_input_path: "data/processed/rank/din_train.parquet"
eval_input_path: "data/processed/rank/din_eval.parquet"
model_dir: "models/stage2_din_v1"

train_config {
  sparse_optimizer {
    adagrad_optimizer {
      lr: 0.002
    }
    constant_learning_rate {}
  }
  dense_optimizer {
    adam_optimizer {
      lr: 0.0003
      beta1: 0.9
      beta2: 0.999
      weight_decay: 1e-05
    }
    cosine_decay_learning_rate {
      decay_steps: 3
      alpha: 0.1
      warmup_steps: 1
      by_epoch: true
    }
  }
  num_epochs: 4
  save_checkpoints_steps: 2000
}

eval_config {}

data_config {
  batch_size: 8192
  dataset_type: ParquetDataset
  label_fields: "label"
  num_workers: 8
  fg_mode: FG_NORMAL
  shuffle: true
}

# 用户 ID
feature_configs {
  id_feature {
    feature_name: "user_id"
    expression: "user:user_id"
    hash_bucket_size: 1200000
    embedding_dim: 32
  }
}

# 物品 ID 与类别
feature_configs {
  id_feature {
    feature_name: "item_id"
    expression: "item:item_id"
    hash_bucket_size: 6000000
    embedding_dim: 32
  }
}

feature_configs {
  id_feature {
    feature_name: "item_category"
    expression: "item:item_category"
    hash_bucket_size: 200000
    embedding_dim: 16
    default_value: "0"
  }
}

# 召回信息
feature_configs {
  raw_feature {
    feature_name: "recall_score"
    expression: "context:recall_score"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  id_feature {
    feature_name: "recall_source"
    expression: "context:recall_source"
    hash_bucket_size: 32
    embedding_dim: 8
    default_value: "mind"
  }
}

# 用户行为统计
feature_configs {
  raw_feature {
    feature_name: "user_click_count"
    expression: "user:user_click_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "user_fav_count"
    expression: "user:user_fav_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "user_cart_count"
    expression: "user:user_cart_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "user_buy_count"
    expression: "user:user_buy_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

# 物品统计
feature_configs {
  raw_feature {
    feature_name: "item_click_count"
    expression: "item:item_click_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "item_fav_count"
    expression: "item:item_fav_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "item_cart_count"
    expression: "item:item_cart_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "item_buy_count"
    expression: "item:item_buy_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

# 历史序列
feature_configs {
  sequence_id_feature {
    feature_name: "hist_item_seq"
    expression: "user:hist_item_seq"
    sequence_length: 50
    embedding_dim: 32
    hash_bucket_size: 6000000
  }
}

feature_configs {
  sequence_id_feature {
    feature_name: "hist_cate_seq"
    expression: "user:hist_cate_seq"
    sequence_length: 50
    embedding_dim: 16
    hash_bucket_size: 200000
  }
}

model_config {
  feature_groups {
    group_name: "deep"
    feature_names: "user_id"
    feature_names: "item_id"
    feature_names: "item_category"
    feature_names: "recall_score"
    feature_names: "recall_source"
    feature_names: "user_click_count"
    feature_names: "user_fav_count"
    feature_names: "user_cart_count"
    feature_names: "user_buy_count"
    feature_names: "item_click_count"
    feature_names: "item_fav_count"
    feature_names: "item_cart_count"
    feature_names: "item_buy_count"
    group_type: DEEP
  }
  feature_groups {
    group_name: "seq"
    feature_names: "hist_item_seq"
    feature_names: "hist_cate_seq"
    group_type: SEQUENCE
  }

  multi_tower_din {
    towers {
      input: "deep"
      mlp {
        hidden_units: 512
        hidden_units: 256
        hidden_units: 128
        dropout_ratio: 0.2
      }
    }
    din_towers {
      input: "seq"
      attn_mlp {
        hidden_units: 256
        hidden_units: 64
        dropout_ratio: 0.1
      }
    }
    final {
      hidden_units: 128
      hidden_units: 64
      dropout_ratio: 0.1
    }
  }

  metrics {
    auc {}
  }
  metrics {
    pr_auc {}
  }
  losses {
    binary_cross_entropy {}
  }
}


