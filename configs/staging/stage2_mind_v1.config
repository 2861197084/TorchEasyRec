# Stage2 MIND v1 (2025-10-01): 多兴趣召回模型配置。
# 数据来自 prepare_mind_data.py 输出，面向 2014-12-18 之前行为训练，预测 2014-12-19。
# 2025-10-04: 调整 label_fields 字段名以适配 prepare_mind_data 最新输出。

train_input_path: "data/processed/recall/mind_train.parquet"
eval_input_path: "data/processed/recall/mind_eval.parquet"
model_dir: "models/stage2_mind_v1"

train_config {
  sparse_optimizer {
    adagrad_optimizer {
      lr: 0.002
    }
    constant_learning_rate {}
  }
  dense_optimizer {
    adam_optimizer {
      lr: 0.0005
    }
    constant_learning_rate {}
  }
  num_epochs: 3
  save_checkpoints_steps: 2000
}

eval_config {}

data_config {
  batch_size: 4096
  dataset_type: ParquetDataset
  label_fields: "label"
  num_workers: 8
  fg_mode: FG_NORMAL
  shuffle: true
}

# 基础 ID 特征
feature_configs {
  id_feature {
    feature_name: "user_id"
    expression: "user:user_id"
    hash_bucket_size: 1200000
    embedding_dim: 32
  }
}

feature_configs {
  id_feature {
    feature_name: "item_id"
    expression: "item:item_id"
    hash_bucket_size: 6000000
    embedding_dim: 32
  }
}

feature_configs {
  id_feature {
    feature_name: "item_category"
    expression: "item:item_category"
    hash_bucket_size: 200000
    embedding_dim: 16
    default_value: "0"
  }
}


# 历史序列特征
feature_configs {
  sequence_id_feature {
    feature_name: "hist_item_seq"
    expression: "user:hist_item_seq"
    sequence_length: 50
    embedding_dim: 32
    hash_bucket_size: 6000000
  }
}

feature_configs {
  sequence_id_feature {
    feature_name: "hist_cate_seq"
    expression: "user:hist_cate_seq"
    sequence_length: 50
    embedding_dim: 16
    hash_bucket_size: 200000
  }
}

# 用户行为统计（可选）
feature_configs {
  raw_feature {
    feature_name: "user_click_count"
    expression: "user:user_click_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "user_buy_count"
    expression: "user:user_buy_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "item_click_count"
    expression: "item:item_click_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

feature_configs {
  raw_feature {
    feature_name: "item_buy_count"
    expression: "item:item_buy_count"
    normalizer: "method=expression,expr=log(x+1)"
    default_value: "0"
  }
}

model_config {
  feature_groups {
    group_name: "user"
    feature_names: "user_id"
    feature_names: "user_click_count"
    feature_names: "user_buy_count"
    group_type: DEEP
  }
  feature_groups {
    group_name: "item"
    feature_names: "item_id"
    feature_names: "item_category"
    feature_names: "item_click_count"
    feature_names: "item_buy_count"
    group_type: DEEP
  }
  feature_groups {
    group_name: "hist"
    feature_names: "hist_item_seq"
    feature_names: "hist_cate_seq"
    group_type: SEQUENCE
  }

  mind {
    user_tower {
      input: "user"
      history_input: "hist"
      user_mlp {
        hidden_units: 256
        hidden_units: 128
        dropout_ratio: 0.2
      }
      hist_seq_mlp {
        hidden_units: 256
        hidden_units: 128
        dropout_ratio: 0.2
      }
      capsule_config {
        max_k: 6
        num_iters: 3
        max_seq_len: 50
        high_dim: 64
        squash_pow: 0.2
        routing_logits_scale: 20
        routing_logits_stddev: 1
      }
      concat_mlp {
        hidden_units: 256
        hidden_units: 128
        dropout_ratio: 0.2
      }
    }
    item_tower {
      input: "item"
      mlp {
        hidden_units: 256
        hidden_units: 128
        dropout_ratio: 0.2
      }
    }
    output_dim: 64
    similarity: COSINE
    temperature: 0.02
    simi_pow: 16
    in_batch_negative: true
  }

  metrics {
    recall_at_k {
      top_k: 50
    }
  }
  metrics {
    recall_at_k {
      top_k: 100
    }
  }
  losses {
    softmax_cross_entropy {}
  }
}


